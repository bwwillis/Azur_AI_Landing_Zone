name: Push to feature branch

on:
  workflow_dispatch:
  #push:
  #branches:
  #- "*"
  #- "!main"
env:
  TF_LOG: INFO
  TF_INPUT: false
jobs:
  check-code:
    runs-on: ubuntu-latest
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    # Set the working directory to vnet for the config files
    defaults:
      run:
        shell: bash
        working-directory: infrastructure/terraform
    steps:
      #Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      # Install the selected version of Terraform CLI
      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ secrets.TERRAFORM_VERSION }}

      # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        id: init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
          STORAGE_ACCOUNT: ${{ secrets.STORAGE_ACCOUNT }}
          CONTAINER_NAME: ${{ secrets.CONTAINER_NAME }}
          BLOB_KEY_NAME: ${{ secrets.BLOB_KEY_NAME }}
          AZURE_STORAGE_ACCESS_KEY: ${{ secrets.AZURE_STORAGE_ACCESS_KEY }}
          STORAGE_CONTAINER_URL: ${{ secrets.STORAGE_CONTAINER_URL }}
          ARM_ENVIRONMENT: ${{ secrets.ARM_ENVIRONMENT }}

        run: terraform init -backend-config="storage_account_name=$STORAGE_ACCOUNT" -backend-config="container_name=$CONTAINER_NAME" -backend-config="resource_group_name=$RESOURCE_GROUP" -backend-config="key=$BLOB_KEY_NAME" -backend-config="access_key=$AZURE_STORAGE_ACCESS_KEY" -backend-config="endpoint=$STORAGE_CONTAINER_URL" -backend-config="tenant_id=$ARM_TENANT_ID" -backend-config="client_id=$ARM_CLIENT_ID" -backend-config="client_secret=$ARM_CLIENT_SECRET" -backend-config="subscription_id=$ARM_SUBSCRIPTION_ID" -backend-config="environment=$ARM_ENVIRONMENT"

      # Run a terraform fmt to check syntax
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      # Run a terraform validate
      - name: Terraform Validate
        id: validate
        # Run even if formatting fails
        run: terraform validate -no-color
        if: success() || failure()
